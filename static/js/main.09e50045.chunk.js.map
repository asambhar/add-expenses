{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","useState","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09e50045.chunk.js","sourcesContent":["import './Card.css'\n\nfunction Card(props){\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import React from 'react';\nimport './ExpensesFilter.css';\nimport { useState } from 'react';\n\nfunction ExpensesFilter(props) {\n\n    useState();\n\n    function dropdownChangeHandler(event){\n        props.onChangeFilter(event.target.value)\n    }\n\n    return (\n        <div className='expenses-filter'>\n        <div className='expenses-filter__control'>\n            <label>Filter by year</label>\n            <select value={props.selected} onChange={dropdownChangeHandler}>\n                <option value='2022'>2022</option>\n                <option value='2021'>2021</option>\n                <option value='2020'>2020</option>\n                <option value='2019'>2019</option>\n            </select>\n        </div>\n        </div>\n    );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css';\n\nfunction ExpenseDate(props){\n    const month = props.date.toLocaleString('en-US', {month: 'long'})\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'})\n    const year = props.date.getFullYear();\n    return(\n        <div className =\"expense-date\">\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__day\">{day}</div>\n        </div>\n    );\n}\n\nexport default ExpenseDate;","import React from 'react';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\nimport Card from '../UI/Card';\n\n\nfunction ExpenseItem (props){\n    return (\n        <li>\n            <Card className=\"expense-item\">\n                <ExpenseDate date={props.date}/>\n                <div className =\"expense-item__description\">\n                    <h2>{props.title}</h2>\n                    <div className = \"expense-item__price\">${props.amount}</div>\n                </div>\n            </Card>\n        </li>\n    )\n}\n\nexport default ExpenseItem;","import React from 'react';\nimport './ExpensesList.css';\nimport ExpenseItem from './ExpenseItem';\n\nfunction ExpensesList(props){\n\n    if(props.items.length === 0){\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\n    }\n\n    return(\n        <ul className=\"expense-list\">\n            {props.items.map((expense) => <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date}/>)}\n        </ul>\n    )\n}\n\nexport default ExpensesList;","import './ChartBar.css';\nimport React from 'react';\n\nfunction ChartBar(props){\n\n    let barFillHeight = '0%';\n\n    if(props.maxValue > 0){\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n\n    }\n\n    return(\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div className=\"chart-bar__fill\" style={{height : barFillHeight}}></div>\n            </div>\n            <div className=\"chart-bar__label\">{props.label}</div>\n        </div>\n    )\n}\n\nexport default ChartBar;","import React from 'react';\nimport './Chart.css';\nimport ChartBar from './ChartBar';\n\nfunction Chart(props){\n\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues);\n\n    return(\n        <div className=\"chart\">\n            {props.dataPoints.map((dataPoint) =>\n                <ChartBar \n                    key={dataPoint.label}\n                    value={dataPoint.value} \n                    maxValue={totalMaximum}\n                    label={dataPoint.label}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default Chart;\n\n","import React from 'react';\nimport Chart from '../Chart/Chart';\n\nfunction ExpensesChart(props){\n\n    const chartDataPoints = [\n        { label: 'Jan', value: 0},\n        { label: 'Feb', value: 0},\n        { label: 'Mar', value: 0},\n        { label: 'Apr', value: 0},\n        { label: 'May', value: 0},\n        { label: 'Jun', value: 0},\n        { label: 'Jul', value: 0},\n        { label: 'Aug', value: 0},\n        { label: 'Sep', value: 0},\n        { label: 'Oct', value: 0},\n        { label: 'Nov', value: 0},\n        { label: 'Dec', value: 0}\n    ];\n\n    for(const expense of props.expenses){\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n    return <Chart dataPoints={chartDataPoints} />\n}\n\nexport default ExpensesChart;","\nimport React, {useState} from 'react';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\n\nfunction Expenses(props){\n\n    const [filteredYear, setFilteredYear] = useState('2020');\n\n    function filterChangedHandler(selectedYear){\n        setFilteredYear(selectedYear);\n    }\n\n    const filteredExpenses = props.items.filter(expense =>{\n        return expense.date.getFullYear().toString() === filteredYear;\n    })\n\n    return(\n        <div>\n            <Card className=\"expenses\" >\n                <ExpensesFilter onChangeFilter={filterChangedHandler} selected={filteredYear}/>\n                <ExpensesChart expenses={filteredExpenses} />\n                <ExpensesList items={filteredExpenses}/>\n            </Card>\n        </div>    \n    );\n}\n\nexport default Expenses;","import React, { useState } from 'react';\nimport './ExpenseForm.css';\n\nfunction ExpenseForm(props){\n\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    function titleChangeHandler(event){\n        setEnteredTitle(event.target.value);\n    }\n\n    function amountChangeHandler(event){\n        setEnteredAmount(event.target.value);\n    }\n\n    function dateChangeHandler(event){\n        setEnteredDate(event.target.value);\n    }\n\n    function submitHandler(event){\n        event.preventDefault();\n\n        const expenseData ={\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate)\n        };\n\n        props.onSaveExpenseData(expenseData);\n\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    };\n\n    return(\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input \n                        type=\"text\"\n                        value={enteredTitle}\n                        onChange={titleChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input \n                        type=\"number\" \n                        min=\"0.01\" \n                        step=\"0.01\" \n                        value={enteredAmount}\n                        onChange={amountChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input \n                        type=\"date\" \n                        min=\"2019-01-01\" \n                        max=\"2022-12-31\" \n                        value={enteredDate}\n                        onChange={dateChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__actions\">\n                    <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n                    <button type=\"submit\">Add Expense</button>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default ExpenseForm;","import React, { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm'\n\nfunction NewExpense(props){\n\n    const [isEditing, setIsEditing] = useState(false);\n\n    function saveExpenseDataHandler(enteredExpenseData){\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        }\n        props.onAddExpense(expenseData);\n        setIsEditing(false)\n    }\n\n    function startEditingHandler (){\n        setIsEditing(true)\n    }\n\n    function stopEditingHandler(){\n        setIsEditing(false)\n    }\n\n    return(\n        <div className=\"new-expense\">\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\n        </div>\n    )\n}\n\nexport default NewExpense;","import React, { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toliet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12)},\n  { \n    id: 'e3',\n    title: 'Car Insurance', \n    amount: 294.67, \n    date: new Date(2021, 2, 28)\n  },\n  { \n    id: 'e4',\n    title: 'New Desk (Wooden)', \n    amount: 450, \n    date: new Date(2021, 5, 12)\n  }\n];\n\nfunction App() {\n  const[expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n\n  function addExpenseHandler(expense){\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  }\n\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}/> \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}